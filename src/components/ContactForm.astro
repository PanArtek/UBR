---
const projectTypes = [
  'Dom jednorodzinny',
  'Mieszkanie',
  'Remont kapitalny',
  'Wykończenie wnętrz',
  'Dach/Elewacja',
  'Łazienka/Kuchnia',
  'Inne',
];

const budgetRanges = [
  'Do 50 000 zł',
  '50 000 - 100 000 zł',
  '100 000 - 200 000 zł',
  '200 000 - 500 000 zł',
  'Powyżej 500 000 zł',
];
---

<form class="contact-form bg-white rounded-lg shadow-md p-6 md:p-8">
  <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
    <!-- Name -->
    <div>
      <label for="name" class="block text-sm font-medium text-gray-700 mb-2">
        Imię i nazwisko *
      </label>
      <input
        type="text"
        id="name"
        name="name"
        required
        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
        placeholder="Jan Kowalski"
      />
    </div>

    <!-- Email -->
    <div>
      <label for="email" class="block text-sm font-medium text-gray-700 mb-2">
        Email *
      </label>
      <input
        type="email"
        id="email"
        name="email"
        required
        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
        placeholder="jan@example.com"
      />
    </div>

    <!-- Phone -->
    <div>
      <label for="phone" class="block text-sm font-medium text-gray-700 mb-2">
        Telefon *
      </label>
      <input
        type="tel"
        id="phone"
        name="phone"
        required
        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
        placeholder="+48 123 456 789"
      />
    </div>

    <!-- Project Type -->
    <div>
      <label for="project_type" class="block text-sm font-medium text-gray-700 mb-2">
        Rodzaj projektu *
      </label>
      <select
        id="project_type"
        name="project_type"
        required
        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
      >
        <option value="">Wybierz rodzaj projektu</option>
        {projectTypes.map((type) => (
          <option value={type}>{type}</option>
        ))}
      </select>
    </div>

    <!-- Budget Range -->
    <div class="md:col-span-2">
      <label for="budget_range" class="block text-sm font-medium text-gray-700 mb-2">
        Orientacyjny budżet
      </label>
      <select
        id="budget_range"
        name="budget_range"
        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
      >
        <option value="">Wybierz zakres budżetu</option>
        {budgetRanges.map((range) => (
          <option value={range}>{range}</option>
        ))}
      </select>
    </div>

    <!-- Description -->
    <div class="md:col-span-2">
      <label for="description" class="block text-sm font-medium text-gray-700 mb-2">
        Opis projektu *
      </label>
      <textarea
        id="description"
        name="description"
        rows="4"
        required
        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors resize-none"
        placeholder="Opisz krótko swój projekt..."
      ></textarea>
    </div>

    <!-- Consent -->
    <div class="md:col-span-2">
      <label class="flex items-start">
        <input
          type="checkbox"
          name="consent"
          required
          class="mt-1 mr-2 h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
        />
        <span class="text-sm text-gray-600">
          Wyrażam zgodę na przetwarzanie moich danych osobowych w celu odpowiedzi na zapytanie. *
        </span>
      </label>
    </div>
  </div>

  <!-- Submit Button -->
  <div class="mt-6">
    <button
      type="submit"
      class="w-full md:w-auto bg-orange-500 text-white px-8 py-3 rounded-md font-medium hover:bg-orange-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:ring-offset-2"
    >
      Wyślij zapytanie
    </button>
  </div>

  <!-- Success/Error Messages -->
  <div class="form-message mt-4 hidden">
    <div class="success-message hidden bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded">
      <p>Dziękujemy za wiadomość! Skontaktujemy się wkrótce.</p>
    </div>
    <div class="error-message hidden bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded">
      <p>Wystąpił błąd. Spróbuj ponownie lub zadzwoń do nas.</p>
    </div>
  </div>
</form>

<script>
  // Form submission handling
  const form = document.querySelector('.contact-form') as HTMLFormElement;
  const successMessage = form.querySelector('.success-message') as HTMLElement;
  const errorMessage = form.querySelector('.error-message') as HTMLElement;
  const formMessage = form.querySelector('.form-message') as HTMLElement;

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    // Hide previous messages
    formMessage?.classList.remove('hidden');
    successMessage?.classList.add('hidden');
    errorMessage?.classList.add('hidden');
    
    // Get form data
    const formData = new FormData(form);
    const data = Object.fromEntries(formData);
    
    // In production, this would send to a real endpoint
    // For now, we'll simulate a successful submission
    try {
      // Simulate API call
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      // Show success message
      successMessage?.classList.remove('hidden');
      form.reset();
      
      // Scroll to message
      formMessage?.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
    } catch (error) {
      // Show error message
      errorMessage?.classList.remove('hidden');
    }
  });
</script>